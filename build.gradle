plugins {
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.fms'
version = '0.0.1-SNAPSHOT'
description = 'A backend application for managing financial transactions, customer accounts, and fund transfers.'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'


    implementation 'com.querydsl:querydsl-core:5.1.0'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'


    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'joda-time:joda-time:2.12.5'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.mockito' // Excludes Mockito from the starter
        exclude group: 'junit' // Excludes JUnit 4
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0' // JUnit 5 API
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0' // JUnit 5 Engine
    testImplementation 'org.hamcrest:hamcrest:2.2' // Hamcrest matchers
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

tasks.register("generateQueryDSL", JavaCompile) {
    group = "build"
    description = "Generates the QueryDSL Q-classes"
    source = sourceSets.main.java
    classpath = configurations.compileClasspath
    options.annotationProcessorPath = configurations.annotationProcessor
    destinationDirectory.set(file("build/generated/querydsl"))
}


tasks.named("compileJava") {
    dependsOn("generateQueryDSL")
    options.annotationProcessorPath = configurations.annotationProcessor
}


tasks.named("clean") {
    delete file("build/generated/querydsl")
}

